groups:
  - name: recording_rules_example
    rules:
    - record: job:http_inprogress_requests:sum
      expr: sum by (job) (http_inprogress_requests)

  - name: alerting_rules_example
    rules:
      # Alert for any instance that is unreachable for >5 minutes.
      - alert: InstanceDown
        expr: up == 0
        for: 5m
        labels:
          severity: page
        annotations:
          summary: "Instance {{ $labels.instance }} down"
          description: "{{ $labels.instance }} of job {{ $labels.job }} has been down for more than 5 minutes."

      # Alert for any instance that has a median request latency >1s.
      - alert: APIHighRequestLatency
        expr: api_http_request_latencies_second{quantile="0.5"} > 1
        for: 10m
        annotations:
          summary: "High request latency on {{ $labels.instance }}"
          description: "{{ $labels.instance }} has a median request latency above 1s (current value: {{ $value }}s)"

  # https://kamaok.org.ua/?p=3224
  - name: nginx
    rules:
      - alert: nginxIsRunning
        expr: nginx_up == 0
        for: 30s
        labels:
          severity: critical
        annotations:
          summary: "Critical: Nginx is down on the host {{ $labels.instance }}."
          description: "Nginx has been down for more than 30 seconds"

      - alert: nginxNotAllConnectionsAreHandled
        expr: rate (nginx_connections_handled{job="nginx-exporter"}[5m]) / rate (nginx_connections_accepted{job="nginx-exporter"}[5m]) <1
        for: 2m
        labels:
          severity: critical
        annotations:
          description: "Critical: Nginx does not handle all accept connections on the host {{ $labels.instance }} for more than 3 minutes"
          summary: "Nginx issue with handling connections"
